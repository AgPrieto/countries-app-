{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\frontend\\\\src\\\\Components\\\\CountryInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryInfo = () => {\n  _s();\n  const {\n    countryCode\n  } = useParams();\n  const [countryInfo, setCountryInfo] = useState(null);\n  const [borders, setBorders] = useState([]);\n  useEffect(() => {\n    const fetchCountryInfo = async () => {\n      try {\n        const response = await fetch(`https://restcountries.com/v3.1/alpha/${countryCode}`);\n        const data = await response.json();\n        setCountryInfo(data[0]);\n\n        // Obtener nombres de países vecinos\n        const borderNames = await Promise.all(data[0].borders.map(async borderCode => {\n          const res = await fetch(`https://restcountries.com/v3.1/alpha/${borderCode}`);\n          const borderData = await res.json();\n          return borderData[0].name.common;\n        }));\n        setBorders(borderNames); // Guardar los nombres de las fronteras\n      } catch (error) {\n        console.error('Error al obtener la información del país:', error);\n      }\n    };\n    fetchCountryInfo();\n  }, [countryCode]);\n  if (!countryInfo) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando informaci\\xF3n...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 28\n  }, this);\n  const {\n    flags,\n    name,\n    population\n  } = countryInfo;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: flags[0],\n      alt: `Flag of ${name.common}`,\n      width: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Fronteras:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), borders.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: borders.map((border, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: border\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this) // Aquí mostramos los nombres de los países fronterizos\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay fronteras disponibles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Poblaci\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }, this), \" \", population.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryInfo, \"u6p/WR6weDPvwFwGcCJLx27N1YY=\", false, function () {\n  return [useParams];\n});\n_c = CountryInfo;\nexport default CountryInfo;\nvar _c;\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","CountryInfo","_s","countryCode","countryInfo","setCountryInfo","borders","setBorders","fetchCountryInfo","response","fetch","data","json","borderNames","Promise","all","map","borderCode","res","borderData","name","common","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","flags","population","src","alt","width","length","border","index","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/frontend/src/Components/CountryInfo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst CountryInfo = () => {\r\n  const { countryCode } = useParams();\r\n  const [countryInfo, setCountryInfo] = useState(null);\r\n  const [borders, setBorders] = useState([]); \r\n\r\n  useEffect(() => {\r\n    const fetchCountryInfo = async () => {\r\n      try {\r\n        const response = await fetch(`https://restcountries.com/v3.1/alpha/${countryCode}`);\r\n        const data = await response.json();\r\n        setCountryInfo(data[0]);\r\n\r\n        // Obtener nombres de países vecinos\r\n        const borderNames = await Promise.all(\r\n          data[0].borders.map(async (borderCode) => {\r\n            const res = await fetch(`https://restcountries.com/v3.1/alpha/${borderCode}`);\r\n            const borderData = await res.json();\r\n            return borderData[0].name.common;\r\n          })\r\n        );\r\n\r\n        setBorders(borderNames); // Guardar los nombres de las fronteras\r\n      } catch (error) {\r\n        console.error('Error al obtener la información del país:', error);\r\n      }\r\n    };\r\n\r\n    fetchCountryInfo();\r\n  }, [countryCode]);\r\n\r\n  if (!countryInfo) return <p>Cargando información...</p>;\r\n\r\n  const {\r\n    flags,\r\n    name,\r\n    population,\r\n  } = countryInfo;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{name.common}</h2>\r\n      <img src={flags[0]} alt={`Flag of ${name.common}`} width=\"100\" />\r\n      <p><strong>Fronteras:</strong></p>\r\n      {borders.length > 0 ? (\r\n        <ul>\r\n          {borders.map((border, index) => (\r\n            <li key={index}>{border}</li> // Aquí mostramos los nombres de los países fronterizos\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No hay fronteras disponibles.</p>\r\n      )}\r\n      <p><strong>Población:</strong> {population.toLocaleString()}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryInfo;\r\n\r\n\r\n\r\n\r\n  \r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}