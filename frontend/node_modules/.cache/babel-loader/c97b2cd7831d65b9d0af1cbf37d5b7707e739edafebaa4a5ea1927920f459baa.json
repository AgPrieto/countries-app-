{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\frontend\\\\src\\\\Components\\\\CountryList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountryList() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await axios.get('https://countriesnow.space/api/v0.1/countries/flag/images');\n        setCountries(response.data.data); // Accedemos a la data que contiene los países y sus banderas\n        setLoading(false);\n      } catch (error) {\n        setError('Error al obtener la lista de países');\n        setLoading(false);\n      }\n    };\n    fetchCountries();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando pa\\xEDses...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '100vh',\n      backgroundColor: '#f3f4f6',\n      padding: '16px'\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: '100%',\n        maxWidth: 600,\n        bgcolor: 'background.paper'\n      },\n      children: countries && countries.length > 0 ? countries.map(country => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: country.name,\n              src: country.flag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/country/${country.iso2}`,\n              className: \"text-xl font-semibold text-blue-600 hover:text-blue-800\",\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this),\n            secondary: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"body2\",\n              sx: {\n                color: 'text.primary',\n                display: 'inline'\n              },\n              children: 'Click to see more details'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, country.iso2, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No countries available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(CountryList, \"qv3q5Zw5p/ejgY5ZP/I/Q1vwUDQ=\");\n_c = CountryList;\nvar _c;\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"names":["React","useEffect","useState","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","Link","axios","jsxDEV","_jsxDEV","CountryList","_s","countries","setCountries","loading","setLoading","error","setError","fetchCountries","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","alignItems","minHeight","backgroundColor","padding","sx","width","maxWidth","bgcolor","length","map","country","Fragment","alt","name","src","flag","primary","to","iso2","className","secondary","component","variant","color","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/frontend/src/Components/CountryList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default function CountryList() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      try {\r\n        const response = await axios.get('https://countriesnow.space/api/v0.1/countries/flag/images');\r\n        setCountries(response.data.data); // Accedemos a la data que contiene los países y sus banderas\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError('Error al obtener la lista de países');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  if (loading) return <div>Cargando países...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      minHeight: '100vh',\r\n      backgroundColor: '#f3f4f6', \r\n      padding: '16px' \r\n    }}>\r\n      <List sx={{ width: '100%', maxWidth: 600, bgcolor: 'background.paper' }}>\r\n        {countries && countries.length > 0 ? (\r\n          countries.map((country) => (\r\n            <React.Fragment key={country.iso2}>\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                 \r\n                  <Avatar alt={country.name} src={country.flag} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={\r\n                    <Link to={`/country/${country.iso2}`} className=\"text-xl font-semibold text-blue-600 hover:text-blue-800\">\r\n                      {country.name}\r\n                    </Link>\r\n                  }\r\n                  secondary={\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      sx={{ color: 'text.primary', display: 'inline' }}\r\n                    >\r\n                      {'Click to see more details'}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </React.Fragment>\r\n          ))\r\n        ) : (\r\n          <div>No countries available</div>\r\n        )}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}