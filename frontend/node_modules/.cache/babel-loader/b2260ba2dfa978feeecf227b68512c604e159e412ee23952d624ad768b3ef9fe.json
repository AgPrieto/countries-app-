{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\frontend\\\\src\\\\Components\\\\CountryList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountryList() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await axios.get('https://countriesnow.space/api/v0.1/countries/flag/images');\n        setCountries(response.data.data); // Accedemos a la data que contiene los países y sus banderas\n        setLoading(false);\n      } catch (error) {\n        setError('Error al obtener la lista de países');\n        setLoading(false);\n      }\n    };\n    fetchCountries();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando pa\\xEDses...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: '100%',\n        maxWidth: 600,\n        bgcolor: 'background.paper'\n      },\n      children: countries && countries.length > 0 ? countries.map(country => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/country/${country.iso2}`,\n            style: {\n              display: 'flex',\n              // Hace que el enlace ocupe todo el recuadro\n              textDecoration: 'none',\n              // Elimina el estilo por defecto del enlace\n              color: 'inherit',\n              // Hereda el color del texto\n              width: '100%' // Asegura que el enlace ocupe todo el ancho\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: country.name,\n                src: country.flag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                className: \"text-xl font-semibold text-blue-600\",\n                children: country.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 23\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                sx: {\n                  color: 'text.primary',\n                  display: 'inline'\n                },\n                children: 'Click to see more details'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, country.iso2, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No countries available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(CountryList, \"qv3q5Zw5p/ejgY5ZP/I/Q1vwUDQ=\");\n_c = CountryList;\nvar _c;\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"names":["React","useEffect","useState","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","Link","axios","jsxDEV","_jsxDEV","CountryList","_s","countries","setCountries","loading","setLoading","error","setError","fetchCountries","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","sx","width","maxWidth","bgcolor","length","map","country","Fragment","alignItems","to","iso2","style","display","textDecoration","color","alt","name","src","flag","primary","variant","secondary","component","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/frontend/src/Components/CountryList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default function CountryList() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      try {\r\n        const response = await axios.get('https://countriesnow.space/api/v0.1/countries/flag/images');\r\n        setCountries(response.data.data); // Accedemos a la data que contiene los países y sus banderas\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError('Error al obtener la lista de países');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  if (loading) return <div>Cargando países...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center min-h-screen bg-gray-100\">\r\n      <List sx={{ width: '100%', maxWidth: 600, bgcolor: 'background.paper' }}>\r\n        {countries && countries.length > 0 ? (\r\n          countries.map((country) => (\r\n            <React.Fragment key={country.iso2}>\r\n              <ListItem alignItems=\"flex-start\">\r\n                {/* Envolvemos todo el ListItem en un Link */}\r\n                <Link\r\n                  to={`/country/${country.iso2}`}\r\n                  style={{\r\n                    display: 'flex', // Hace que el enlace ocupe todo el recuadro\r\n                    textDecoration: 'none', // Elimina el estilo por defecto del enlace\r\n                    color: 'inherit', // Hereda el color del texto\r\n                    width: '100%', // Asegura que el enlace ocupe todo el ancho\r\n                  }}\r\n                >\r\n                  <ListItemAvatar>\r\n                    {/* Usamos la bandera desde la API */}\r\n                    <Avatar alt={country.name} src={country.flag} />\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"h6\" className=\"text-xl font-semibold text-blue-600\">\r\n                        {country.name}\r\n                      </Typography>\r\n                    }\r\n                    secondary={\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        sx={{ color: 'text.primary', display: 'inline' }}\r\n                      >\r\n                        {'Click to see more details'}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Link>\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </React.Fragment>\r\n          ))\r\n        ) : (\r\n          <div>No countries available</div>\r\n        )}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}