{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\frontend\\\\src\\\\Components\\\\CountryInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryInfo = () => {\n  _s();\n  const {\n    countryCode\n  } = useParams();\n  const [countryInfo, setCountryInfo] = useState(null);\n  const [borders, setBorders] = useState([]); // Estado para las fronteras\n  const [flag, setFlag] = useState(''); // Estado para la bandera\n\n  useEffect(() => {\n    const fetchCountryInfo = async () => {\n      try {\n        var _flagData$data$find;\n        // Obtener la información del país\n        const response = await fetch(`https://restcountries.com/v3.1/alpha/${countryCode}`);\n        const data = await response.json();\n        setCountryInfo(data[0]);\n\n        // Obtener las banderas desde el endpoint de flags\n        const flagResponse = await fetch('https://countriesnow.space/api/v0.1/countries/flag/images');\n        const flagData = await flagResponse.json();\n\n        // Buscar la URL de la bandera correspondiente al país\n        const countryFlag = (_flagData$data$find = flagData.data.find(country => country.iso2 === countryCode)) === null || _flagData$data$find === void 0 ? void 0 : _flagData$data$find.flag;\n        setFlag(countryFlag);\n\n        // Obtener los nombres de los países vecinos\n        const borderNames = await Promise.all(data[0].borders.map(async borderCode => {\n          const res = await fetch(`https://restcountries.com/v3.1/alpha/${borderCode}`);\n          const borderData = await res.json();\n          return {\n            name: borderData[0].name.common,\n            code: borderData[0].cca2 // Código de país en formato de dos letras\n          };\n        }));\n        setBorders(borderNames); // Guardar los nombres y códigos de las fronteras\n      } catch (error) {\n        console.error('Error al obtener la información del país:', error);\n      }\n    };\n    fetchCountryInfo();\n  }, [countryCode]);\n  if (!countryInfo) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando informaci\\xF3n...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 28\n  }, this);\n  const {\n    name,\n    population\n  } = countryInfo;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), flag ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: flag,\n      alt: `Bandera de ${name.common}`,\n      width: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Bandera no disponible\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Fronteras:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), borders.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: borders.map((border, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/country/${border.code}`,\n          className: \"text-blue-600 hover:underline\",\n          children: border.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay fronteras disponibles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Poblaci\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 10\n      }, this), \" \", population.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/countries\",\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n        children: \"Volver a la lista de pa\\xEDses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryInfo, \"prd8LdR7+KeEFCVS6vX9KFzrrO4=\", false, function () {\n  return [useParams];\n});\n_c = CountryInfo;\nexport default CountryInfo;\nvar _c;\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","jsxDEV","_jsxDEV","CountryInfo","_s","countryCode","countryInfo","setCountryInfo","borders","setBorders","flag","setFlag","fetchCountryInfo","_flagData$data$find","response","fetch","data","json","flagResponse","flagData","countryFlag","find","country","iso2","borderNames","Promise","all","map","borderCode","res","borderData","name","common","code","cca2","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","population","src","alt","width","length","border","index","to","className","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/frontend/src/Components/CountryInfo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nconst CountryInfo = () => {\r\n  const { countryCode } = useParams();\r\n  const [countryInfo, setCountryInfo] = useState(null);\r\n  const [borders, setBorders] = useState([]); // Estado para las fronteras\r\n  const [flag, setFlag] = useState(''); // Estado para la bandera\r\n\r\n  useEffect(() => {\r\n    const fetchCountryInfo = async () => {\r\n      try {\r\n        // Obtener la información del país\r\n        const response = await fetch(`https://restcountries.com/v3.1/alpha/${countryCode}`);\r\n        const data = await response.json();\r\n        setCountryInfo(data[0]);\r\n\r\n        // Obtener las banderas desde el endpoint de flags\r\n        const flagResponse = await fetch('https://countriesnow.space/api/v0.1/countries/flag/images');\r\n        const flagData = await flagResponse.json();\r\n\r\n        // Buscar la URL de la bandera correspondiente al país\r\n        const countryFlag = flagData.data.find(country => country.iso2 === countryCode)?.flag;\r\n        setFlag(countryFlag);\r\n\r\n        // Obtener los nombres de los países vecinos\r\n        const borderNames = await Promise.all(\r\n          data[0].borders.map(async (borderCode) => {\r\n            const res = await fetch(`https://restcountries.com/v3.1/alpha/${borderCode}`);\r\n            const borderData = await res.json();\r\n            return {\r\n              name: borderData[0].name.common,\r\n              code: borderData[0].cca2, // Código de país en formato de dos letras\r\n            };\r\n          })\r\n        );\r\n\r\n        setBorders(borderNames); // Guardar los nombres y códigos de las fronteras\r\n      } catch (error) {\r\n        console.error('Error al obtener la información del país:', error);\r\n      }\r\n    };\r\n\r\n    fetchCountryInfo();\r\n  }, [countryCode]);\r\n\r\n  if (!countryInfo) return <p>Cargando información...</p>;\r\n\r\n  const {\r\n    name,\r\n    population,\r\n  } = countryInfo;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{name.common}</h2>\r\n      {flag ? (\r\n        <img src={flag} alt={`Bandera de ${name.common}`} width=\"100\" />\r\n      ) : (\r\n        <p>Bandera no disponible</p>\r\n      )}\r\n      <p><strong>Fronteras:</strong></p>\r\n      {borders.length > 0 ? (\r\n        <ul>\r\n          {borders.map((border, index) => (\r\n            <li key={index}>\r\n              <Link to={`/country/${border.code}`} className=\"text-blue-600 hover:underline\">\r\n                {border.name}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No hay fronteras disponibles.</p>\r\n      )}\r\n      <p><strong>Población:</strong> {population.toLocaleString()}</p>\r\n\r\n      {/* Botón para volver a la lista de países */}\r\n      <div className=\"mt-4\">\r\n        <Link to=\"/countries\" className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\">\r\n          Volver a la lista de países\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryInfo;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}